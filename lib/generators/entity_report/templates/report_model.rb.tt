class Report < ActiveRecord::Base
	#Adapt reportable types to your project	
	REPORTABLE_TYPES = [User].map(&:name).freeze

	belongs_to :reportable, polymorphic: true
	belongs_to :user

	validates :reason, :reportable, :user, presence: true
	validate :valid_reason?, :description_needed?, unless: -> { reportable.nil? }

private

	def valid_reason?
		return if reportable.valid_reason?(reason)
		#Adapt errors to your project
		raise "'#{reason}' is not a valid reason"
	end

	def description_needed?
		return unless reportable.description_needed?(reason) && description.blank?
		#Adapt errors to your project
		raise "description cannot be blank when the report reason is '#{reason}'"
	end
end